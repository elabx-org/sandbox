name: 'uks - tfstate storage create'

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Which checks to run'
        type: choice
        options:
        - checks-only     # runs both checks
        - backup-only     # runs only backup checks
        - infra-only     # runs only infrastructure checks
        - create         # runs in create/update mode
        default: 'checks-only'
permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: read

jobs:
  setup-backend:
    runs-on: ubuntu-latest
    environment: uks plan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: elabx-org/alz-reusable-workflows
          path: alz-reusable-workflows
          fetch-depth: 0
          ref: main

      - name: Create TFState Storage
        uses: ./alz-reusable-workflows/.github/actions/terraform-backend-create
        with:
          environment: uks apply
          client_id: ${{ vars.ARM_CLIENT_ID }}
          tenant_id: ${{ vars.ARM_TENANT_ID }}
          subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          # Use the workflow_dispatch input
          checks_only: ${{ github.event.inputs.checks_only }}
          run_network_rules_check: false
          tf_backend_sa_rg: ${{ vars.TF_BACKEND_SA_RG }}
          tf_backend_sa: ${{ vars.TF_BACKEND_SA }}
          tf_backend_sa_container: ${{ vars.TF_BACKEND_SA_CONTAINER }}
          tf_backend_sa_region: ${{ vars.TF_BACKEND_SA_REGION }}
          tf_backend_sa_region_short: ${{ vars.TF_BACKEND_SA_REGION_SHORT }}
          tf_backend_sa_sku: ${{ vars.TF_BACKEND_SA_SKU }}
          tf_backend_env: ${{ vars.TF_BACKEND_ENV }}